{"version":3,"sources":["webpack:////home/twkim/lamis/lamis-ohif/extensions/dicom-html/src/TypedArrayProp.js","webpack:////home/twkim/lamis/lamis-ohif/extensions/dicom-html/src/DicomHtmlViewport.js","webpack:////home/twkim/lamis/lamis-ohif/extensions/dicom-html/src/ConnectedDicomHtmlViewport.js","webpack:////home/twkim/lamis/lamis-ohif/extensions/dicom-html/src/OHIFDicomHtmlViewport.js"],"names":["TypedArrayProp","any","props","propName","componentName","obj","Float64Array","Float32Array","Int32Array","Int16Array","Int8Array","Uint32Array","Uint16Array","Uint8Array","Uint8ClampedArray","Error","float64","float32","float","int32","int16","int8","int","uint32","uint16","uint8","uint8clamped","uint","dcmjs","data","DicomMetaDictionary","DicomMessage","getMainDataItem","key","value","DicomHtmlViewport","content","error","setViewportActive","viewportIndex","activeViewportIndex","this","setContentFromByteArray","byteArray","arrayBuffer","buffer","dicomData","readFile","dataset","naturalizeDataset","dict","_meta","namifyDataset","meta","mainData","root","patientValue","PatientName","PatientSex","PatientID","push","studyValue","StudyDescription","seriesValue","SeriesDescription","SeriesNumber","manufacturerValue","Manufacturer","ManufacturerModelName","DeviceSerialNumber","mainDataObjects","CompletionFlag","VerificationFlag","Object","keys","forEach","item","contentDateTimeValue","ContentDate","ContentTime","getMainData","contentSequence","getContentSequence","header","level","ConceptNameCodeSequence","CodeMeaning","CodeValue","CodingSchemeDesignator","HeaderDynamicLevel","setState","state","data-cy","className","onClick","setViewportActiveHandler","onScroll","JSON","stringify","Component","PropTypes","func","isRequired","number","OHIF","redux","actions","ConnectedDicomHtmlViewport","connect","ownProps","viewports","dispatch","DicomLoaderService","utils","OHIFDicomHtmlViewport","viewportData","displaySet","studies","findDicomDataPromise","then","object"],"mappings":"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","file":"17.bundle.0681ec3da0dfffbcae0f.js","sourcesContent":["// https://github.com/facebook/prop-types/issues/69\n\nexport const TypedArrayProp = {\n  any: (props, propName, componentName) => {\n    let obj = props[propName];\n    if (\n      !(\n        obj instanceof Float64Array ||\n        obj instanceof Float32Array ||\n        obj instanceof Int32Array ||\n        obj instanceof Int16Array ||\n        obj instanceof Int8Array ||\n        obj instanceof Uint32Array ||\n        obj instanceof Uint16Array ||\n        obj instanceof Uint8Array ||\n        obj instanceof Uint8ClampedArray\n      )\n    ) {\n      return new Error(\n        'Invalid prop `' +\n          propName +\n          '` supplied to' +\n          ' `' +\n          componentName +\n          '`. Expected a typed array.'\n      );\n    }\n  },\n\n  float64: (props, propName, componentName) => {\n    if (!(props[propName] instanceof Float64Array)) {\n      return new Error(\n        'Invalid prop `' +\n          propName +\n          '` supplied to' +\n          ' `' +\n          componentName +\n          '`. Expected a Float64Array.'\n      );\n    }\n  },\n\n  float32: (props, propName, componentName) => {\n    if (!(props[propName] instanceof Float32Array)) {\n      return new Error(\n        'Invalid prop `' +\n          propName +\n          '` supplied to' +\n          ' `' +\n          componentName +\n          '`. Expected a Float32Array.'\n      );\n    }\n  },\n\n  float: (props, propName, componentName) => {\n    if (\n      !(\n        props[propName] instanceof Float64Array ||\n        props[propName] instanceof Float32Array\n      )\n    ) {\n      return new Error(\n        'Invalid prop `' +\n          propName +\n          '` supplied to' +\n          ' `' +\n          componentName +\n          '`. Expected a Float32Array or Float64Array.'\n      );\n    }\n  },\n\n  int32: (props, propName, componentName) => {\n    if (!(props[propName] instanceof Int32Array)) {\n      return new Error(\n        'Invalid prop `' +\n          propName +\n          '` supplied to' +\n          ' `' +\n          componentName +\n          '`. Expected an Int32Array.'\n      );\n    }\n  },\n\n  int16: (props, propName, componentName) => {\n    if (!(props[propName] instanceof Int16Array)) {\n      return new Error(\n        'Invalid prop `' +\n          propName +\n          '` supplied to' +\n          ' `' +\n          componentName +\n          '`. Expected an In16Array.'\n      );\n    }\n  },\n\n  int8: (props, propName, componentName) => {\n    if (!(props[propName] instanceof Int8Array)) {\n      return new Error(\n        'Invalid prop `' +\n          propName +\n          '` supplied to' +\n          ' `' +\n          componentName +\n          '`. Expected an Int8Array.'\n      );\n    }\n  },\n\n  int: (props, propName, componentName) => {\n    if (\n      !(\n        props[propName] instanceof Int32Array ||\n        props[propName] instanceof Int16Array ||\n        props[propName] instanceof Int8Array\n      )\n    ) {\n      return new Error(\n        'Invalid prop `' +\n          propName +\n          '` supplied to' +\n          ' `' +\n          componentName +\n          '`. Expected an Int32Array, In16Array, or Int8Array.'\n      );\n    }\n  },\n\n  uint32: (props, propName, componentName) => {\n    if (!(props[propName] instanceof Uint32Array)) {\n      return new Error(\n        'Invalid prop `' +\n          propName +\n          '` supplied to' +\n          ' `' +\n          componentName +\n          '`. Expected a Uint32Array.'\n      );\n    }\n  },\n\n  uint16: (props, propName, componentName) => {\n    if (!(props[propName] instanceof Uint16Array)) {\n      return new Error(\n        'Invalid prop `' +\n          propName +\n          '` supplied to' +\n          ' `' +\n          componentName +\n          '`. Expected a Uint16Array.'\n      );\n    }\n  },\n\n  uint8: (props, propName, componentName) => {\n    if (!(props[propName] instanceof Uint8Array)) {\n      return new Error(\n        'Invalid prop `' +\n          propName +\n          '` supplied to' +\n          ' `' +\n          componentName +\n          '`. Expected a Uint8Array.'\n      );\n    }\n  },\n\n  uint8clamped: (props, propName, componentName) => {\n    if (!(props[propName] instanceof Uint8ClampedArray)) {\n      return new Error(\n        'Invalid prop `' +\n          propName +\n          '` supplied to' +\n          ' `' +\n          componentName +\n          '`. Expected a Uint8ClampedArray.'\n      );\n    }\n  },\n\n  uint: (props, propName, componentName) => {\n    if (\n      !(\n        props[propName] instanceof Uint32Array ||\n        props[propName] instanceof Uint16Array ||\n        props[propName] instanceof Uint8Array ||\n        props[propName] instanceof Uint8ClampedArray\n      )\n    ) {\n      return new Error(\n        'Invalid prop `' +\n          propName +\n          '` supplied to' +\n          ' `' +\n          componentName +\n          '`. Expected a Uint32Array, Uint16Array, Uint8Array, or Uint8ClampedArray.'\n      );\n    }\n  }\n};\n\nexport { TypedArrayProp as default };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport dcmjs from 'dcmjs';\nimport TypedArrayProp from './TypedArrayProp';\n\nimport './DicomHtmlViewport.css';\n\nfunction getRelationshipString(data) {\n  switch (data.RelationshipType) {\n    case 'HAS CONCEPT MOD':\n      return 'Concept modifier: ';\n    case 'HAS OBS CONTEXT':\n      return 'Observation context: ';\n    default:\n      return '';\n  }\n}\n\nconst getMeaningString = data => {\n  if (data.ConceptNameCodeSequence) {\n    const { CodeMeaning } = data.ConceptNameCodeSequence;\n\n    return `${CodeMeaning} = `;\n  }\n\n  return '';\n};\n\nfunction getValueString(data) {\n  switch (data.ValueType) {\n    case 'CODE':\n      const {\n        CodeMeaning,\n        CodeValue,\n        CodingSchemeDesignator,\n      } = data.ConceptNameCodeSequence;\n\n      return `${CodeMeaning} (${CodeValue}, ${CodingSchemeDesignator})`;\n\n    case 'PNAME':\n      return data.PersonName;\n\n    case 'TEXT':\n      return data.TextValue;\n\n    case 'UIDREF':\n      return data.UID;\n\n    case 'NUM':\n      const { MeasuredValueSequence } = data;\n      const numValue = MeasuredValueSequence.NumericValue;\n      const codeValue =\n        MeasuredValueSequence.MeasurementUnitsCodeSequence.CodeValue;\n      return `${numValue} ${codeValue}`;\n  }\n}\n\nfunction constructPlainValue(data) {\n  const value = getValueString(data);\n\n  if (value) {\n    return getRelationshipString(data) + getMeaningString(data) + value;\n  }\n}\n\nfunction constructContentSequence(data, header) {\n  if (!data.ContentSequence) {\n    return;\n  }\n\n  const items = data.ContentSequence.map(item => parseContent(item)).filter(\n    item => item\n  );\n\n  if (!items.length) {\n    return;\n  }\n\n  const result = {\n    items,\n  };\n\n  if (header) {\n    result.header = header;\n  }\n\n  return result;\n}\n\nfunction parseContent(data) {\n  if (data.ValueType) {\n    if (data.ValueType === 'CONTAINER') {\n      const header = data.ConceptNameCodeSequence.CodeMeaning;\n\n      return constructContentSequence(data, header);\n    }\n\n    return constructPlainValue(data);\n  }\n\n  if (data.ContentSequence) {\n    return constructContentSequence(data);\n  }\n}\n\nconst { DicomMetaDictionary, DicomMessage } = dcmjs.data;\n\nfunction getMainData(data) {\n  const root = [];\n\n  const patientValue = `${data.PatientName} (${data.PatientSex}, #${data.PatientID})`;\n  root.push(getMainDataItem('Patient', patientValue));\n\n  const studyValue = data.StudyDescription;\n  root.push(getMainDataItem('Study', studyValue));\n\n  const seriesValue = `${data.SeriesDescription} (#${data.SeriesNumber})`;\n  root.push(getMainDataItem('Series', seriesValue));\n\n  const manufacturerValue = `${data.Manufacturer} (${data.ManufacturerModelName}, #${data.DeviceSerialNumber})`;\n\n  root.push(getMainDataItem('Manufacturer', manufacturerValue));\n\n  const mainDataObjects = {\n    CompletionFlag: 'Completion flag',\n    VerificationFlag: 'Verification flag',\n  };\n\n  Object.keys(mainDataObjects).forEach(key => {\n    if (!data[key]) {\n      return;\n    }\n\n    const item = getMainDataItem(mainDataObjects[key], data[key]);\n\n    root.push(item);\n  });\n\n  // TODO: Format these dates\n  const contentDateTimeValue = `${data.ContentDate} ${data.ContentTime}`;\n  root.push(getMainDataItem('Content Date/Time', contentDateTimeValue));\n\n  root.push();\n\n  return <div>{root}</div>;\n}\n\nconst getContentSequence = (data, level = 1) => {\n  let header;\n\n  if (data.ConceptNameCodeSequence) {\n    const {\n      CodeMeaning,\n      CodeValue,\n      CodingSchemeDesignator,\n    } = data.ConceptNameCodeSequence;\n\n    header = `${CodeMeaning} (${CodeValue} - ${CodingSchemeDesignator})`;\n  }\n\n  const root = [];\n  if (header) {\n    const HeaderDynamicLevel = `h${level}`;\n\n    root.push(<HeaderDynamicLevel key={header}>{header}</HeaderDynamicLevel>);\n  }\n\n  Object.keys(data).forEach(key => {\n    const value = data[key];\n\n    let content;\n    if (value instanceof Object) {\n      content = getContentSequence(value, level + 1);\n    } else {\n      content = (\n        <div key={key}>\n          {key} - {data[key]}\n        </div>\n      );\n    }\n\n    root.push(content);\n  });\n\n  return <div>{root}</div>;\n};\n\nfunction getMainDataItem(key, value) {\n  return (\n    <div key={key}>\n      <b>{key}</b>: {value}\n    </div>\n  );\n}\n\nclass DicomHtmlViewport extends Component {\n  state = {\n    content: null,\n    error: null,\n  };\n\n  static propTypes = {\n    byteArray: TypedArrayProp.uint8,\n    setViewportActive: PropTypes.func.isRequired,\n    viewportIndex: PropTypes.number.isRequired,\n    activeViewportIndex: PropTypes.number.isRequired,\n  };\n\n  componentDidMount() {\n    const dataSet = this.setContentFromByteArray(this.props.byteArray);\n  }\n\n  setContentFromByteArray(byteArray) {\n    const arrayBuffer = byteArray.buffer;\n    const dicomData = DicomMessage.readFile(arrayBuffer);\n    const dataset = DicomMetaDictionary.naturalizeDataset(dicomData.dict);\n    dataset._meta = DicomMetaDictionary.namifyDataset(dicomData.meta);\n\n    const mainData = getMainData(dataset);\n    const contentSequence = getContentSequence(dataset);\n    const content = (\n      <>\n        {mainData}\n        {contentSequence}\n      </>\n    );\n\n    this.setState({\n      content,\n    });\n  }\n\n  setViewportActiveHandler = () => {\n    const {\n      setViewportActive,\n      viewportIndex,\n      activeViewportIndex,\n    } = this.props;\n\n    if (viewportIndex !== activeViewportIndex) {\n      setViewportActive(viewportIndex);\n    }\n  };\n\n  render() {\n    const { content, error } = this.state;\n\n    return (\n      <div\n        data-cy=\"dicom-html-viewport\"\n        className=\"DicomHtmlViewport\"\n        onClick={this.setViewportActiveHandler}\n        onScroll={this.setViewportActiveHandler}\n      >\n        {content}\n        {error && <h2>{JSON.stringify(error)}</h2>}\n      </div>\n    );\n  }\n}\n\nexport default DicomHtmlViewport;\n","import OHIF from '@ohif/core';\nimport { connect } from 'react-redux';\nimport DicomHtmlViewport from './DicomHtmlViewport';\n\nconst { setViewportActive } = OHIF.redux.actions;\n\nconst mapStateToProps = (state, ownProps) => {\n  const { viewportIndex, byteArray } = ownProps;\n  const { activeViewportIndex } = state.viewports;\n\n  return {\n    viewportIndex,\n    activeViewportIndex,\n    byteArray,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { viewportIndex } = ownProps;\n\n  return {\n    setViewportActive: () => {\n      dispatch(setViewportActive(viewportIndex));\n    },\n  };\n};\n\nconst ConnectedDicomHtmlViewport = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DicomHtmlViewport);\n\nexport default ConnectedDicomHtmlViewport;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport OHIF from '@ohif/core';\nimport ConnectedDicomHtmlViewport from './ConnectedDicomHtmlViewport';\n\nconst { DicomLoaderService } = OHIF.utils;\n\nclass OHIFDicomHtmlViewport extends Component {\n  static propTypes = {\n    studies: PropTypes.object,\n    displaySet: PropTypes.object,\n    viewportIndex: PropTypes.number,\n    viewportData: PropTypes.object,\n  };\n\n  state = {\n    byteArray: null,\n    error: null,\n  };\n\n  componentDidMount() {\n    const { displaySet, studies } = this.props.viewportData;\n\n    DicomLoaderService.findDicomDataPromise(displaySet, studies).then(\n      data => {\n        const byteArray = new Uint8Array(data);\n        this.setState({\n          byteArray: byteArray,\n        });\n      },\n      error => {\n        this.setState({\n          error,\n        });\n\n        throw new Error(error);\n      }\n    );\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.byteArray && (\n          <ConnectedDicomHtmlViewport\n            byteArray={this.state.byteArray}\n            viewportIndex={this.props.viewportIndex}\n          />\n        )}\n        {this.state.error && <h2>{JSON.stringify(this.state.error)}</h2>}\n      </>\n    );\n  }\n}\n\nexport default OHIFDicomHtmlViewport;\n"],"sourceRoot":""}