{"version":3,"sources":["webpack:///./connectedComponents/ViewerLocalFileData.js","webpack:///./connectedComponents/ConnectedCineDialog.js","webpack:///./connectedComponents/ConnectedThresholdDialog.js","webpack:///./connectedComponents/ConnectedLayoutButton.js","webpack:///./connectedComponents/ToolbarRow.js","webpack:///./connectedComponents/ConnectedStudyBrowser.js","webpack:///./connectedComponents/findDisplaySetByUID.js","webpack:///./components/ViewportGrid/ViewportPane.js","webpack:///./components/ViewportGrid/ViewportGrid.js","webpack:///./components/ViewportGrid/DefaultViewport.js","webpack:///./components/ViewportGrid/ConnectedViewportGrid.js","webpack:///./connectedComponents/ViewerMain.js","webpack:///./connectedComponents/ConnectedViewerMain.js","webpack:///./components/SidePanel.js","webpack:///./components/ErrorBoundaryDialog/ErrorBoundaryDialog.js","webpack:///./components/ErrorBoundaryDialog/index.js","webpack:///./connectedComponents/Viewer.js","webpack:///./connectedComponents/ConnectedViewer.js","webpack:///./lib/localFileLoaders/fileLoader.js","webpack:///./lib/localFileLoaders/pdfFileLoader.js","webpack:///./lib/localFileLoaders/dicomFileLoader.js","webpack:///./lib/localFileLoaders/fileLoaderService.js","webpack:///./lib/filesToStudies.js"],"names":["OHIFStudyMetadata","metadata","studyMetadataManager","utils","dropZoneLinkDialog","onDrop","i18n","dir","noDrag","getRootProps","getInputProps","className","webkitdirectory","mozdirectory","ViewerLocalFileData","studies","loading","error","purge","updatedStudies","map","study","studyMetadata","StudyInstanceUID","sopClassHandlerModules","extensionManager","modules","displaySets","createDisplaySets","forEachDisplaySet","displayset","localFile","add","setState","acceptedFiles","filesToStudies","updateStudies","this","state","JSON","stringify","noClick","style","width","height","studyInstanceUIDs","a","props","t","linksDialogMessage","Component","PropTypes","array","withTranslation","scrollToIndex","toolImport","csTools","import","setViewportSpecificData","OHIF","redux","actions","ConnectedCineDialog","connect","viewports","cine","viewportSpecificData","activeViewportIndex","activeEnabledElement","commandsManager","runCommand","activeViewportCineData","isPlaying","cineFrameRate","dispatch","dispatchSetViewportSpecificData","viewportIndex","data","propsFromState","propsFromDispatch","ownProps","onPlayPauseChanged","cloneDeep","onFrameRateChanged","frameRate","onClickNextButton","stackData","getToolState","length","currentImageIdIndex","imageIds","onClickBackButton","onClickSkipToStart","onClickSkipToEnd","lastIndex","CineDialog","ConnectedThresholdDialog","thresholdData","threshold","dom","v","cornerstone","getViewport","thresholdLevel","voi","windowCenter","thresholdWindow","windowWidth","thresholdMinLevel","thresholdMaxLevel","thresholdMinWindow","thresholdMaxWindow","activeViewportThresholdData","onThresholdLevelChanged","level","viewport","setViewport","onThresholdWindowChanged","window","onPresetClick","console","log","ThresholdDialog","setLayout","setViewportActive","ConnectedLayoutButton","currentLayout","layout","onChange","selectedCell","numRows","row","numColumns","col","numViewports","i","plugin","vtk","push","onChangeFromDispatch","LayoutButton","ToolbarRow","dialog","dialogId","activeButtons","toolbarButtons","find","button","options","behavior","dismiss","id","filter","toolbarButtonDefinitions","_getVisibleToolbarButtons","call","seriesPerStudyCount","_handleBuiltIn","bind","updateButtonGroups","panelModules","MODULE_TYPES","PANEL","buttonGroups","left","right","forEach","panelExtension","panelModule","module","defaultContexts","Array","from","defaultContext","menuOptions","menuOption","contexts","context","hasActiveContext","activeContexts","some","actx","includes","isDisabled","activeViewport","menuOptionEntry","value","target","icon","bottomLabel","label","unshift","prevProps","activeContextsChanged","prevStudies","prevActiveViewport","shouldUpdate","series","closeCineDialogIfNotApplicable","buttonComponents","_getButtonComponents","onPress","side","handleSidePanelChange","onPressLeft","onPressRight","padding","selectedLeftSidePanel","onValueChanged","marginLeft","selectedRightSidePanel","_getCustomButtonComponent","CustomComponent","activeButtonsIds","isActive","parentContext","toolbarClickCallback","_handleToolbarButtonClick","key","_getExpandableButtonComponent","activeCommand","childButtons","buttons","childButton","onClick","indexOf","_getDefaultButtonComponent","_this","hasCustomComponent","hasNestedButtonDefinitions","evt","commandName","Object","assign","commandOptions","type","toggables","togglable","toolbarModules","TOOLBAR","extension","definitions","definition","document","querySelector","getBoundingClientRect","x","y","newDialogId","create","content","defaultPosition","title","isLeftSidePanelOpen","bool","isRequired","isRightSidePanelOpen","string","func","arrayOf","any","modal","withModal","withDialog","withAppContext","setActiveViewportSpecificData","ConnectedStudyBrowser","stackLoadingProgressMap","progress","studiesWithLoadingData","thumbnails","displaySetInstanceUID","stackId","stackProgressData","stackPercentComplete","percentComplete","onThumbnailClick","displaySet","isArray","reduce","all","current","currentDisplaySet","concat","ds","findDisplaySetByUID","isDerived","Modality","getSourceDisplaySet","Error","StudyBrowser","ViewportPane","children","propClassName","useDrop","accept","drop","droppedItem","monitor","canDrop","isOver","collect","highlighted","hovered","classNames","ref","data-cy","propTypes","node","number","loadAndCacheDerivedDisplaySets","ViewportGrid","availablePlugins","defaultPluginName","defaultPlugin","setViewportData","viewportData","isStudyLoaded","rowSize","colSize","snackbar","useSnackbarContext","logger","useLogger","useEffect","promise","catch","message","show","autoClose","ViewportPanes","React","useMemo","pluginName","ViewportComponent","_getViewportComponent","active","display","gridTemplateRows","gridTemplateColumns","supportsDrop","object","defaultProps","DefaultViewport","getAvailableViewportModules","memoize","viewportModules","availableViewportModules","moduleDefinition","extensionId","ConnectedViewportGrid","VIEWPORT","values","_values","ViewerMain","dirtyViewportPanes","viewportPane","foundDisplaySet","vp","findDisplaySet","dSet","getDisplaySets","fillEmptyViewportPanes","prevViewportAmount","viewportAmount","isVtk","keys","clearViewportSpecificData","ConnectedViewerMain","SidePanel","isOpen","fromSideClass","styles","maxWidth","marginRight","Number","parseInt","UIModalService","servicesManager","services","ErrorBoundaryDialog","fallbackComponent","role","onError","componentStack","useState","open","setOpen","s","name","classnames","opened","Viewer","info","earliestDate","Date","toISOString","latestDate","StudyDate","moment","Promise","resolve","timepointType","timepointId","PatientID","isLocked","timepointData","query","timepointIds","timepoints","onTimepointsUpdated","measurements","onMeasurementsUpdated","activeServer","server","MeasurementApi","setConfiguration","dataExchange","retrieve","DICOMSR","retrieveMeasurements","store","storeMeasurements","TimepointApi","retrieveTimepoints","storeTimepoints","remove","removeTimepoint","update","updateTimepoint","disassociate","disassociateStudy","_getActiveViewport","dismissAll","timepointApi","measurementApi","currentTimepointId","_mapStudiesToThumbnails","VisiblePanelLeft","VisiblePanelRight","panelExt","components","comp","component","WhiteLabelingContext","Consumer","whiteLabeling","UserManagerContext","userManager","AppContext","appContext","ConnectedHeader","linkText","appConfig","showStudyList","undefined","linkPath","createLogoComponentFn","selectedPanel","sideClicked","toUpperCase","slice","openKey","selectedKey","updatedState","prevSelectedPanel","isSameSelectedPanel","activeIndex","getActiveViewport","shape","SeriesDescription","SeriesNumber","InstanceNumber","numImageFrames","images","getImageId","wadoRoot","imageId","altImageText","imageIndex","Math","floor","setTimepoints","setMeasurements","getActiveServer","servers","ConnectedViewer","FileLoader","file","image","dataset","PDFFileLoader","cornerstoneWADOImageLoader","wadouri","loadFileRequest","getDefaultStudy","StudyTime","AccessionNumber","ReferringPhysicianName","PatientName","PatientBirthdate","PatientSex","StudyId","StudyDescription","SeriesInstanceUID","instances","SOPInstanceUID","SOPClassUID","Rows","Columns","NumberOfFrames","isLocalFile","metadataProvider","DICOMFileLoader","dicomData","dcmjs","DicomMessage","readFile","DicomMetaDictionary","naturalizeDataset","dict","addInstance","_meta","namifyDataset","meta","e","getStudyFromDataset","PatientBirthDate","StudyID","instance","url","FileLoaderService","fileType","loader","getLoader","groupBy","list","groupByKey","listKey","nonKeyCounter","acc","obj","studyGroup","seriesGrouped","fileManager","loadFile","getDataset","getStudies","processFile","fileLoaderService","addFile","files","processFilesPromises","groupSeries","flat"],"mappings":"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","file":"ViewerLocalFileData.bundle.9f4581094a94f664b7fb.js","sourcesContent":["import React, { Component } from 'react';\nimport { metadata, utils } from '@ohif/core';\n\nimport ConnectedViewer from './ConnectedViewer.js';\nimport PropTypes from 'prop-types';\nimport { extensionManager } from './../App.js';\nimport Dropzone from 'react-dropzone';\nimport filesToStudies from '../lib/filesToStudies';\nimport './ViewerLocalFileData.css';\nimport { withTranslation } from 'react-i18next';\n\nconst { OHIFStudyMetadata } = metadata;\nconst { studyMetadataManager } = utils;\n\nconst dropZoneLinkDialog = (onDrop, i18n, dir) => {\n  return (\n    <Dropzone onDrop={onDrop} noDrag>\n      {({ getRootProps, getInputProps }) => (\n        <span {...getRootProps()} className=\"link-dialog\">\n          {dir ? (\n            <span>\n              {i18n('Load folders')}\n              <input\n                {...getInputProps()}\n                webkitdirectory=\"true\"\n                mozdirectory=\"true\"\n              />\n            </span>\n          ) : (\n            <span>\n              {i18n('Load files')}\n              <input {...getInputProps()} />\n            </span>\n          )}\n        </span>\n      )}\n    </Dropzone>\n  );\n};\n\nconst linksDialogMessage = (onDrop, i18n) => {\n  return (\n    <>\n      {i18n('Or click to ')}\n      {dropZoneLinkDialog(onDrop, i18n)}\n      {i18n(' or ')}\n      {dropZoneLinkDialog(onDrop, i18n, true)}\n      {i18n(' from dialog')}\n    </>\n  );\n};\n\nclass ViewerLocalFileData extends Component {\n  static propTypes = {\n    studies: PropTypes.array,\n  };\n\n  state = {\n    studies: null,\n    loading: false,\n    error: null,\n  };\n\n  updateStudies = studies => {\n    // Render the viewer when the data is ready\n    studyMetadataManager.purge();\n\n    // Map studies to new format, update metadata manager?\n    const updatedStudies = studies.map(study => {\n      const studyMetadata = new OHIFStudyMetadata(\n        study,\n        study.StudyInstanceUID\n      );\n      const sopClassHandlerModules =\n        extensionManager.modules['sopClassHandlerModule'];\n\n      study.displaySets =\n        study.displaySets ||\n        studyMetadata.createDisplaySets(sopClassHandlerModules);\n\n      studyMetadata.forEachDisplaySet(displayset => {\n        displayset.localFile = true;\n      });\n\n      studyMetadataManager.add(studyMetadata);\n\n      return study;\n    });\n\n    this.setState({\n      studies: updatedStudies,\n    });\n  };\n\n  render() {\n    const onDrop = async acceptedFiles => {\n      this.setState({ loading: true });\n\n      const studies = await filesToStudies(acceptedFiles);\n      const updatedStudies = this.updateStudies(studies);\n\n      if (!updatedStudies) {\n        return;\n      }\n\n      this.setState({ studies: updatedStudies, loading: false });\n    };\n\n    if (this.state.error) {\n      return <div>Error: {JSON.stringify(this.state.error)}</div>;\n    }\n\n    return (\n      <Dropzone onDrop={onDrop} noClick>\n        {({ getRootProps, getInputProps }) => (\n          <div {...getRootProps()} style={{ width: '100%', height: '100%' }}>\n            {this.state.studies ? (\n              <ConnectedViewer\n                studies={this.state.studies}\n                studyInstanceUIDs={\n                  this.state.studies &&\n                  this.state.studies.map(a => a.StudyInstanceUID)\n                }\n              />\n            ) : (\n              <div className={'drag-drop-instructions'}>\n                <div className={'drag-drop-contents'}>\n                  {this.state.loading ? (\n                    <h3>{this.props.t('Loading...')}</h3>\n                  ) : (\n                    <>\n                      <h3>\n                        {this.props.t(\n                          'Drag and Drop DICOM files here to load them in the Viewer'\n                        )}\n                      </h3>\n                      <h4>{linksDialogMessage(onDrop, this.props.t)}</h4>\n                    </>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </Dropzone>\n    );\n  }\n}\n\nexport default withTranslation('Common')(ViewerLocalFileData);\n","import { connect } from 'react-redux';\nimport { CineDialog } from '@ohif/ui';\nimport OHIF from '@ohif/core';\nimport csTools from 'cornerstone-tools';\nimport { commandsManager } from './../App.js';\n// Our target output kills the `as` and \"import\" throws a keyword error\n// import { import as toolImport, getToolState } from 'cornerstone-tools';\nimport cloneDeep from 'lodash.clonedeep';\n\nconst toolImport = csTools.import;\nconst scrollToIndex = toolImport('util/scrollToIndex');\nconst { setViewportSpecificData } = OHIF.redux.actions;\n\n// Why do I need or care about any of this info?\n// A dispatch action should be able to pull this at the time of an event?\n// `isPlaying` and `cineFrameRate` might matter, but I think we can prop pass for those.\nconst mapStateToProps = state => {\n  // Get activeViewport's `cine` and `stack`\n  const { viewportSpecificData, activeViewportIndex } = state.viewports;\n  const { cine } = viewportSpecificData[activeViewportIndex] || {};\n  const dom = commandsManager.runCommand('getActiveViewportEnabledElement');\n\n  const cineData = cine || {\n    isPlaying: false,\n    cineFrameRate: 24,\n  };\n\n  // New props we're creating?\n  return {\n    activeEnabledElement: dom,\n    activeViewportCineData: cineData,\n    activeViewportIndex: state.viewports.activeViewportIndex,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchSetViewportSpecificData: (viewportIndex, data) => {\n      dispatch(setViewportSpecificData(viewportIndex, data));\n    },\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  const {\n    activeEnabledElement,\n    activeViewportCineData,\n    activeViewportIndex,\n  } = propsFromState;\n\n  return {\n    cineFrameRate: activeViewportCineData.cineFrameRate,\n    isPlaying: activeViewportCineData.isPlaying,\n    onPlayPauseChanged: isPlaying => {\n      const cine = cloneDeep(activeViewportCineData);\n      cine.isPlaying = !cine.isPlaying;\n\n      propsFromDispatch.dispatchSetViewportSpecificData(activeViewportIndex, {\n        cine,\n      });\n    },\n    onFrameRateChanged: frameRate => {\n      const cine = cloneDeep(activeViewportCineData);\n      cine.cineFrameRate = frameRate;\n\n      propsFromDispatch.dispatchSetViewportSpecificData(activeViewportIndex, {\n        cine,\n      });\n    },\n    onClickNextButton: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      const { currentImageIdIndex, imageIds } = stackData.data[0];\n      if (currentImageIdIndex >= imageIds.length - 1) return;\n      scrollToIndex(activeEnabledElement, currentImageIdIndex + 1);\n    },\n    onClickBackButton: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      const { currentImageIdIndex } = stackData.data[0];\n      if (currentImageIdIndex === 0) return;\n      scrollToIndex(activeEnabledElement, currentImageIdIndex - 1);\n    },\n    onClickSkipToStart: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      scrollToIndex(activeEnabledElement, 0);\n    },\n    onClickSkipToEnd: () => {\n      const stackData = csTools.getToolState(activeEnabledElement, 'stack');\n      if (!stackData || !stackData.data || !stackData.data.length) return;\n      const lastIndex = stackData.data[0].imageIds.length - 1;\n      scrollToIndex(activeEnabledElement, lastIndex);\n    },\n  };\n};\n\nconst ConnectedCineDialog = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(CineDialog);\n\nexport default ConnectedCineDialog;\n","import { connect } from 'react-redux';\nimport cornerstone from 'cornerstone-core';\nimport { getEnabledElement } from '../../../../extensions/cornerstone/src/state';\n\nimport { ThresholdDialog } from '@ohif/ui';\nimport OHIF from '@ohif/core';\nimport csTools from 'cornerstone-tools';\nimport { commandsManager } from './../App.js';\n// Our target output kills the `as` and \"import\" throws a keyword error\n// import { import as toolImport, getToolState } from 'cornerstone-tools';\nimport cloneDeep from 'lodash.clonedeep';\nconst toolImport = csTools.import;\nconst scrollToIndex = toolImport('util/scrollToIndex');\nconst { setViewportSpecificData } = OHIF.redux.actions;\n\n// state를 해당 컴포넌트로 연결\nconst mapStateToProps = state => {\n  // Get activeViewport's `cine` and `stack`\n  const { viewportSpecificData, activeViewportIndex } = state.viewports;\n  const { threshold } = viewportSpecificData[activeViewportIndex] || {};\n  const dom = commandsManager.runCommand('getActiveViewportEnabledElement');\n\n  // let viewport = cornerstone.getViewport(dom);\n  // cornerstone.setViewport(dom, viewport);\n\n  let thresholdData;\n  try {\n    // console.log(getEnabledElement(activeViewportIndex));\n    // console.log(dom);\n    // console.log(getEnabledElement(activeViewportIndex) === dom)\n    let v = cornerstone.getViewport(dom);\n    // cornerstone.setViewport(dom, viewport);\n    thresholdData = threshold || {\n      // TODO: need to change the hard coded data\n      // thresholdLevel: 0,\n      // thresholdWindow: 0,\n      thresholdLevel: v.voi.windowCenter,\n      thresholdWindow: v.voi.windowWidth,\n      thresholdMinLevel: -2000,\n      thresholdMaxLevel: 4000,\n      thresholdMinWindow: 0,\n      thresholdMaxWindow: 4000,\n    };\n\n\n  } catch {\n    // // console.log(\"not now\")\n    thresholdData = threshold || {\n      // TODO: need to change the hard coded data\n      thresholdLevel: 0,\n      thresholdWindow: 0,\n      thresholdMinLevel: -2000,\n      thresholdMaxLevel: 4000,\n      thresholdMinWindow: 0,\n      thresholdMaxWindow: 4000,\n    };\n    // // New props we're creating?\n    // return {\n    //   activeEnabledElement: dom,\n    //   activeViewportThresholdData: thresholdData,\n    //   activeViewportIndex: state.viewports.activeViewportIndex,\n    // };\n  }\n\n  // New props we're creating?\n  return {\n    activeEnabledElement: dom,\n    activeViewportThresholdData: thresholdData,\n    activeViewportIndex: state.viewports.activeViewportIndex,\n  };\n};\n\n// dispatch의 함수를 props에 연결\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchSetViewportSpecificData: (viewportIndex, data) => {\n      dispatch(setViewportSpecificData(viewportIndex, data));\n    },\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch, ownProps) => {\n  const {\n    activeEnabledElement,\n    activeViewportThresholdData,\n    activeViewportIndex,\n  } = propsFromState;\n\n  const dom = commandsManager.runCommand('getActiveViewportEnabledElement');\n  // cornerstone.getViewport(dom).voi.windowWidth = 1400;\n\n\n  return {\n    thresholdLevel: activeViewportThresholdData.thresholdLevel,\n    thresholdWindow: activeViewportThresholdData.thresholdWindow,\n    thresholdMinLevel: activeViewportThresholdData.thresholdMinLevel,\n    thresholdMaxLevel: activeViewportThresholdData.thresholdMaxLevel,\n    thresholdMinWindow: activeViewportThresholdData.thresholdMinWindow,\n    thresholdMaxWindow: activeViewportThresholdData.thresholdMaxWindow,\n    onThresholdLevelChanged: level => {\n      let viewport = cornerstone.getViewport(dom);\n      viewport.voi.windowCenter = level;\n      cornerstone.setViewport(dom, viewport);\n    },\n    onThresholdWindowChanged: window => {\n      let viewport = cornerstone.getViewport(dom);\n      viewport.voi.windowWidth = window;\n      cornerstone.setViewport(dom, viewport);\n    },\n\n    onPresetClick: (level, window) => {\n      console.log(level, window);\n      let viewport = cornerstone.getViewport(dom);\n      viewport.voi.windowCenter = level;\n      viewport.voi.windowWidth = window;\n      cornerstone.setViewport(dom, viewport);\n\n    },\n  };\n};\n\nconst ConnectedThresholdDialog = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(ThresholdDialog);\n\nexport default ConnectedThresholdDialog;\n","import { LayoutButton } from '@ohif/ui';\nimport OHIF from '@ohif/core';\nimport { connect } from 'react-redux';\n\nconst { setLayout, setViewportActive } = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  return {\n    currentLayout: state.viewports.layout,\n    activeViewportIndex: state.viewports.activeViewportIndex,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // TODO: Change if layout switched becomes more complex\n    onChange: (selectedCell, currentLayout, activeViewportIndex) => {\n      const viewports = [];\n      const numRows = selectedCell.row + 1;\n      const numColumns = selectedCell.col + 1;\n      const numViewports = numRows * numColumns;\n\n      for (let i = 0; i < numViewports; i++) {\n        // Hacky way to allow users to exit MPR \"mode\"\n        const viewport = currentLayout.viewports[i];\n        let plugin = viewport && viewport.plugin;\n        if (viewport && viewport.vtk) {\n          plugin = 'cornerstone';\n        }\n\n        viewports.push({\n          plugin,\n        });\n      }\n      const layout = {\n        numRows,\n        numColumns,\n        viewports,\n      };\n\n      const maxActiveIndex = numViewports - 1;\n      if (activeViewportIndex > maxActiveIndex) {\n        dispatch(setViewportActive(0));\n      }\n\n      dispatch(setLayout(layout));\n    },\n  };\n};\n\nconst mergeProps = (propsFromState, propsFromDispatch) => {\n  const onChangeFromDispatch = propsFromDispatch.onChange;\n  const { currentLayout, activeViewportIndex } = propsFromState;\n\n  return {\n    onChange: selectedCell =>\n      onChangeFromDispatch(selectedCell, currentLayout, activeViewportIndex),\n  };\n};\n\nconst ConnectedLayoutButton = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(LayoutButton);\n\nexport default ConnectedLayoutButton;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\n\nimport { MODULE_TYPES } from '@ohif/core';\nimport {\n  ExpandableToolMenu,\n  RoundedButtonGroup,\n  ToolbarButton,\n  withModal,\n  withDialog,\n} from '@ohif/ui';\n\nimport './ToolbarRow.css';\nimport { commandsManager, extensionManager } from './../App.js';\n\nimport ConnectedCineDialog from './ConnectedCineDialog';\nimport ConnectedThresholdDialog from './ConnectedThresholdDialog';\n\nimport ConnectedLayoutButton from './ConnectedLayoutButton';\nimport { withAppContext } from '../context/AppContext';\n\nclass ToolbarRow extends Component {\n  // TODO: Simplify these? isOpen can be computed if we say \"any\" value for selected,\n  // closed if selected is null/undefined\n  static propTypes = {\n    isLeftSidePanelOpen: PropTypes.bool.isRequired,\n    isRightSidePanelOpen: PropTypes.bool.isRequired,\n    selectedLeftSidePanel: PropTypes.string.isRequired,\n    selectedRightSidePanel: PropTypes.string.isRequired,\n    handleSidePanelChange: PropTypes.func.isRequired,\n    activeContexts: PropTypes.arrayOf(PropTypes.string).isRequired,\n    studies: PropTypes.array,\n    t: PropTypes.func.isRequired,\n    // NOTE: withDialog, withModal HOCs\n    dialog: PropTypes.any,\n    modal: PropTypes.any,\n  };\n\n  static defaultProps = {\n    studies: [],\n  };\n\n  constructor(props) {\n    super(props);\n\n    const toolbarButtonDefinitions = _getVisibleToolbarButtons.call(this);\n    // TODO:\n    // If it's a tool that can be active... Mark it as active?\n    // - Tools that are on/off?\n    // - Tools that can be bound to multiple buttons?\n\n    // Normal ToolbarButtons...\n    // Just how high do we need to hoist this state?\n    // Why ToolbarRow instead of just Toolbar? Do we have any others?\n    this.state = {\n      toolbarButtons: toolbarButtonDefinitions,\n      activeButtons: [],\n    };\n\n    this.seriesPerStudyCount = [];\n\n    this._handleBuiltIn = _handleBuiltIn.bind(this);\n\n    this.updateButtonGroups();\n  }\n\n  updateButtonGroups() {\n    const panelModules = extensionManager.modules[MODULE_TYPES.PANEL];\n\n    this.buttonGroups = {\n      left: [],\n      right: [],\n    };\n\n    // ~ FIND MENU OPTIONS\n    panelModules.forEach(panelExtension => {\n      const panelModule = panelExtension.module;\n      const defaultContexts = Array.from(panelModule.defaultContext);\n\n      panelModule.menuOptions.forEach(menuOption => {\n        const contexts = Array.from(menuOption.context || defaultContexts);\n        const hasActiveContext = this.props.activeContexts.some(actx =>\n          contexts.includes(actx)\n        );\n\n        // It's a bit beefy to pass studies; probably only need to be reactive on `studyInstanceUIDs` and activeViewport?\n        // Note: This does not cleanly handle `studies` prop updating with panel open\n        const isDisabled =\n          typeof menuOption.isDisabled === 'function' &&\n          menuOption.isDisabled(this.props.studies, this.props.activeViewport);\n\n        if (hasActiveContext && !isDisabled) {\n          const menuOptionEntry = {\n            value: menuOption.target,\n            icon: menuOption.icon,\n            bottomLabel: menuOption.label,\n          };\n          const from = menuOption.from || 'right';\n\n          this.buttonGroups[from].push(menuOptionEntry);\n        }\n      });\n    });\n\n    // TODO: This should come from extensions, instead of being baked in\n    this.buttonGroups.left.unshift({\n      value: 'studies',\n      icon: 'th-large',\n      bottomLabel: this.props.t('Series'),\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const activeContextsChanged =\n      prevProps.activeContexts !== this.props.activeContexts;\n\n    const prevStudies = prevProps.studies;\n    const prevActiveViewport = prevProps.activeViewport;\n    const activeViewport = this.props.activeViewport;\n    const studies = this.props.studies;\n    const seriesPerStudyCount = this.seriesPerStudyCount;\n\n    let shouldUpdate = false;\n\n    if (\n      prevStudies.length !== studies.length ||\n      prevActiveViewport !== activeViewport\n    ) {\n      shouldUpdate = true;\n    } else {\n      for (let i = 0; i < studies.length; i++) {\n        if (studies[i].series.length !== seriesPerStudyCount[i]) {\n          seriesPerStudyCount[i] = studies[i].series.length;\n\n          shouldUpdate = true;\n          break;\n        }\n      }\n    }\n\n    if (shouldUpdate) {\n      this.updateButtonGroups();\n    }\n\n    if (activeContextsChanged) {\n      this.setState(\n        {\n          toolbarButtons: _getVisibleToolbarButtons.call(this),\n        },\n        this.closeCineDialogIfNotApplicable\n      );\n    }\n  }\n\n  closeCineDialogIfNotApplicable = () => {\n    const { dialog } = this.props;\n    let { dialogId, activeButtons, toolbarButtons } = this.state;\n    if (dialogId) {\n      const cineButtonPresent = toolbarButtons.find(\n        button => button.options && button.options.behavior === 'CINE'\n      );\n      if (!cineButtonPresent) {\n        dialog.dismiss({ id: dialogId });\n        activeButtons = activeButtons.filter(\n          button => button.options && button.options.behavior !== 'CINE'\n        );\n        this.setState({ dialogId: null, activeButtons });\n      }\n    }\n  };\n\n  render() {\n    const buttonComponents = _getButtonComponents.call(\n      this,\n      this.state.toolbarButtons,\n      this.state.activeButtons\n    );\n\n    const onPress = (side, value) => {\n      this.props.handleSidePanelChange(side, value);\n    };\n    const onPressLeft = onPress.bind(this, 'left');\n    const onPressRight = onPress.bind(this, 'right');\n\n    return (\n      <>\n        <div className=\"ToolbarRow\">\n          <div className=\"pull-left m-t-1 p-y-1\" style={{ padding: '10px' }}>\n            <RoundedButtonGroup\n              options={this.buttonGroups.left}\n              value={this.props.selectedLeftSidePanel || ''}\n              onValueChanged={onPressLeft}\n            />\n          </div>\n          {buttonComponents}\n          <ConnectedLayoutButton />\n          <div\n            className=\"pull-right m-t-1 rm-x-1\"\n            style={{ marginLeft: 'auto' }}\n          >\n            {this.buttonGroups.right.length && (\n              <RoundedButtonGroup\n                options={this.buttonGroups.right}\n                value={this.props.selectedRightSidePanel || ''}\n                onValueChanged={onPressRight}\n              />\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nfunction _getCustomButtonComponent(button, activeButtons) {\n  const CustomComponent = button.CustomComponent;\n  const isValidComponent = typeof CustomComponent === 'function';\n\n  // Check if its a valid customComponent. Later on an CustomToolbarComponent interface could be implemented.\n  if (isValidComponent) {\n    const parentContext = this;\n    const activeButtonsIds = activeButtons.map(button => button.id);\n    const isActive = activeButtonsIds.includes(button.id);\n\n    return (\n      <CustomComponent\n        parentContext={parentContext}\n        toolbarClickCallback={_handleToolbarButtonClick.bind(this)}\n        button={button}\n        key={button.id}\n        activeButtons={activeButtonsIds}\n        isActive={isActive}\n      />\n    );\n  }\n}\n\nfunction _getExpandableButtonComponent(button, activeButtons) {\n  // Iterate over button definitions and update `onClick` behavior\n  let activeCommand;\n  const childButtons = button.buttons.map(childButton => {\n    childButton.onClick = _handleToolbarButtonClick.bind(this, childButton);\n\n    if (activeButtons.map(button => button.id).indexOf(childButton.id) > -1) {\n      activeCommand = childButton.id;\n    }\n\n    return childButton;\n  });\n\n  return (\n    <ExpandableToolMenu\n      key={button.id}\n      label={button.label}\n      icon={button.icon}\n      buttons={childButtons}\n      activeCommand={activeCommand}\n    />\n  );\n}\n\n// 버튼 셋업,\nfunction _getDefaultButtonComponent(button, activeButtons) {\n  return (\n    <ToolbarButton\n      key={button.id}\n      label={button.label}\n      icon={button.icon}\n      onClick={_handleToolbarButtonClick.bind(this, button)}\n      isActive={activeButtons.map(button => button.id).includes(button.id)}\n    />\n  );\n}\n/**\n * Determine which extension buttons should be showing, if they're\n * active, and what their onClick behavior should be.\n */\nfunction _getButtonComponents(toolbarButtons, activeButtons) {\n  const _this = this;\n  return toolbarButtons.map(button => {\n    const hasCustomComponent = button.CustomComponent;\n    const hasNestedButtonDefinitions = button.buttons && button.buttons.length;\n\n    if (hasCustomComponent) {\n      // console.log('custom button: ', button.label);    --> 2D MPR\n      return _getCustomButtonComponent.call(_this, button, activeButtons);\n    }\n\n    if (hasNestedButtonDefinitions) {\n      return _getExpandableButtonComponent.call(_this, button, activeButtons);\n    }\n\n    return _getDefaultButtonComponent.call(_this, button, activeButtons);\n  });\n}\n\n/**\n * TODO: DEPRECATE\n * This is used exclusively in `extensions/cornerstone/src`\n * We have better ways with new UI Services to trigger \"builtin\" behaviors\n *\n * A handy way for us to handle different button types. IE. firing commands for\n * buttons, or initiation built in behavior.\n *\n * @param {*} button\n * @param {*} evt\n * @param {*} props\n */\nfunction _handleToolbarButtonClick(button, evt, props) {\n  const { activeButtons } = this.state;\n\n  if (button.commandName) {\n    const options = Object.assign({ evt }, button.commandOptions);\n    commandsManager.runCommand(button.commandName, options); // changes the stae of command and run\n  }\n\n  // TODO: Use Types ENUM\n  // TODO: We can update this to be a `getter` on the extension to query\n  //       For the active tools after we apply our updates?\n  if (button.type === 'setToolActive') {\n    const toggables = activeButtons.filter(\n      ({ options }) => options && !options.togglable\n    );\n    this.setState({ activeButtons: [...toggables, button] });\n    console.log(toggables, button, activeButtons);\n  } else if (button.type === 'builtIn') {\n    this._handleBuiltIn(button);\n  }\n}\n\n/**\n *\n */\nfunction _getVisibleToolbarButtons() {\n  const toolbarModules = extensionManager.modules[MODULE_TYPES.TOOLBAR];\n  const toolbarButtonDefinitions = [];\n\n  toolbarModules.forEach(extension => {\n    const { definitions, defaultContext } = extension.module;\n    definitions.forEach(definition => {\n      const context = definition.context || defaultContext;\n\n      if (this.props.activeContexts.includes(context)) {\n        toolbarButtonDefinitions.push(definition);\n      }\n    });\n  });\n\n  return toolbarButtonDefinitions;\n}\n\nfunction _handleBuiltIn(button) {\n  /* TODO: Keep cine button active until its unselected. */\n  const { dialog, t } = this.props;\n  const { dialogId } = this.state;\n  const { id, options } = button;\n\n  if (options.behavior === 'CINE') {\n    if (dialogId) {\n      dialog.dismiss({ id: dialogId });\n      this.setState(state => ({\n        dialogId: null,\n        activeButtons: [\n          ...state.activeButtons.filter(button => button.id !== id),\n        ],\n      }));\n    } else {\n      const spacing = 20;\n      const { x, y } = document\n        .querySelector(`.ViewerMain`)\n        .getBoundingClientRect();\n      const newDialogId = dialog.create({\n        content: ConnectedCineDialog,\n        defaultPosition: {\n          x: x + spacing || 0,\n          y: y + spacing || 0,\n        },\n      });\n      this.setState(state => ({\n        dialogId: newDialogId,\n        activeButtons: [...state.activeButtons, button],\n      }));\n    }\n  }\n\n  if (options.behavior === 'THRESHOLD') {\n    if (dialogId) {\n      dialog.dismiss({ id: dialogId });\n      this.setState(state => ({\n        dialogId: null,\n        activeButtons: [\n          ...state.activeButtons.filter(button => button.id !== id),\n        ],\n      }));\n    } else {\n      const spacing = 20;\n      const { x, y } = document\n        .querySelector(`.ViewerMain`)\n        .getBoundingClientRect();\n      const newDialogId = dialog.create({\n        content: ConnectedThresholdDialog,\n        defaultPosition: {\n          x: x + spacing || 0,\n          y: y + spacing || 0,\n        },\n      });\n      this.setState(state => ({\n        dialogId: newDialogId,\n        activeButtons: [...state.activeButtons, button],\n      }));\n    }\n  }\n\n  if (options.behavior === 'DOWNLOAD_SCREEN_SHOT') {\n    commandsManager.runCommand('showDownloadViewportModal', {\n      title: t('Download High Quality Image'),\n    });\n  }\n}\n\nexport default withTranslation(['Common', 'ViewportDownloadForm'])(\n  withModal(withDialog(withAppContext(ToolbarRow)))\n);\n","import OHIF from '@ohif/core';\nimport { connect } from 'react-redux';\nimport { StudyBrowser } from '@ohif/ui';\nimport cloneDeep from 'lodash.clonedeep';\nimport findDisplaySetByUID from './findDisplaySetByUID';\n\nconst { studyMetadataManager } = OHIF.utils;\n\nconst { setActiveViewportSpecificData } = OHIF.redux.actions;\n\n// TODO\n// - Determine in which display set is active from Redux (activeViewportIndex and layout viewportData)\n// - Pass in errors and stack loading progress from Redux\nconst mapStateToProps = (state, ownProps) => {\n  // If we know that the stack loading progress details have changed,\n  // we can try to update the component state so that the thumbnail\n  // progress bar is updated\n  const stackLoadingProgressMap = state.loading.progress;\n  const studiesWithLoadingData = cloneDeep(ownProps.studies);\n\n  studiesWithLoadingData.forEach(study => {\n    study.thumbnails.forEach(data => {\n      const { displaySetInstanceUID } = data;\n      const stackId = `StackProgress:${displaySetInstanceUID}`;\n      const stackProgressData = stackLoadingProgressMap[stackId];\n\n      let stackPercentComplete = 0;\n      if (stackProgressData) {\n        stackPercentComplete = stackProgressData.percentComplete;\n      }\n\n      data.stackPercentComplete = stackPercentComplete;\n    });\n  });\n\n  return {\n    studies: studiesWithLoadingData,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onThumbnailClick: displaySetInstanceUID => {\n      let displaySet = findDisplaySetByUID(\n        ownProps.studyMetadata,\n        displaySetInstanceUID\n      );\n\n      if (displaySet.isDerived) {\n        const { Modality } = displaySet;\n\n        displaySet = displaySet.getSourceDisplaySet(ownProps.studyMetadata);\n\n        if (!displaySet) {\n          throw new Error(\n            `Referenced series for ${Modality} dataset not present.`\n          );\n        }\n\n        if (!displaySet) {\n          throw new Error('Source data not present');\n        }\n      }\n\n      dispatch(setActiveViewportSpecificData(displaySet));\n    },\n  };\n};\n\nconst ConnectedStudyBrowser = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StudyBrowser);\n\nexport default ConnectedStudyBrowser;\n","/**\n * Finds displaySet by UID across all displaySets inside studyMetadata\n * @param {Array} studyMetadata\n * @param {string} displaySetInstanceUID\n */\nexport default function findDisplaySetByUID(\n  studyMetadata,\n  displaySetInstanceUID\n) {\n  if (!Array.isArray(studyMetadata)) return null;\n\n  const allDisplaySets = studyMetadata.reduce((all, current) => {\n    let currentDisplaySet = [];\n    if (current && Array.isArray(current.displaySets)) {\n      currentDisplaySet = current.displaySets;\n    }\n    return all.concat(currentDisplaySet);\n  }, []);\n\n  const bySetInstanceUID = ds =>\n    ds.displaySetInstanceUID === displaySetInstanceUID;\n\n  const displaySet = allDisplaySets.find(bySetInstanceUID);\n  return displaySet || null;\n}\n","import React from 'react';\nimport { useDrop } from 'react-dnd';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './ViewportPane.css';\n\nconst ViewportPane = function (props) {\n  const { children, onDrop, viewportIndex, className: propClassName } = props;\n  const [{ hovered, highlighted }, drop] = useDrop({\n    accept: 'thumbnail',\n    drop: (droppedItem, monitor) => {\n      const canDrop = monitor.canDrop();\n      const isOver = monitor.isOver();\n\n      if (canDrop && isOver && onDrop) {\n        const { StudyInstanceUID, displaySetInstanceUID } = droppedItem;\n\n        onDrop({ viewportIndex, StudyInstanceUID, displaySetInstanceUID });\n      }\n    },\n    // Monitor, and collect props.\n    // Returned as values by `useDrop`\n    collect: monitor => ({\n      highlighted: monitor.canDrop(),\n      hovered: monitor.isOver(),\n    }),\n  });\n\n  return (\n    <div\n      className={classNames(\n        'viewport-drop-target',\n        { hovered: hovered },\n        { highlighted: highlighted },\n        propClassName\n      )}\n      ref={drop}\n      data-cy={`viewport-container-${viewportIndex}`}\n    >\n      {children}\n    </div>\n  );\n};\n\nViewportPane.propTypes = {\n  children: PropTypes.node.isRequired,\n  viewportIndex: PropTypes.number.isRequired,\n  onDrop: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nexport default ViewportPane;\n","import './ViewportGrid.css';\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { utils } from '@ohif/core';\nimport { useSnackbarContext, useLogger } from '@ohif/ui';\n//\nimport ViewportPane from './ViewportPane.js';\nimport DefaultViewport from './DefaultViewport.js';\nimport EmptyViewport from './EmptyViewport.js';\n\nconst { loadAndCacheDerivedDisplaySets } = utils;\n\nconst ViewportGrid = function(props) {\n  const {\n    activeViewportIndex,\n    availablePlugins,\n    defaultPlugin: defaultPluginName,\n    layout,\n    numRows,\n    numColumns,\n    setViewportData,\n    studies,\n    viewportData,\n    children,\n    isStudyLoaded,\n  } = props;\n\n  const rowSize = 100 / numRows;\n  const colSize = 100 / numColumns;\n\n  // http://grid.malven.co/\n  if (!viewportData || !viewportData.length) {\n    return null;\n  }\n\n  const snackbar = useSnackbarContext();\n  const logger = useLogger();\n\n  useEffect(() => {\n    if (isStudyLoaded) {\n      viewportData.forEach(displaySet => {\n        const promises = loadAndCacheDerivedDisplaySets(displaySet, studies);\n        promises.forEach(promise => {\n          promise.catch(error => {\n            logger.error({ error, message: error.message });\n            snackbar.show({\n              title: 'Error loading derived display set:',\n              message: error.message,\n              type: 'error',\n              error,\n              autoClose: false,\n            });\n          });\n        });\n      });\n    }\n  }, [studies, viewportData, isStudyLoaded, snackbar]);\n\n  const getViewportPanes = () =>\n    layout.viewports.map((layout, viewportIndex) => {\n      const displaySet = viewportData[viewportIndex];\n\n      if (!displaySet) {\n        return null;\n      }\n\n      const data = {\n        displaySet,\n        studies,\n      };\n\n      // JAMES TODO:\n\n      // Use whichever plugin is currently in use in the panel\n      // unless nothing is specified. If nothing is specified\n      // and the display set has a plugin specified, use that.\n      //\n      // TODO: Change this logic to:\n      // - Plugins define how capable they are of displaying a SopClass\n      // - When updating a panel, ensure that the currently enabled plugin\n      // in the viewport is capable of rendering this display set. If not\n      // then use the most capable available plugin\n\n      const pluginName =\n        !layout.plugin && displaySet && displaySet.plugin\n          ? displaySet.plugin\n          : layout.plugin;\n\n      const ViewportComponent = _getViewportComponent(\n        data, // Why do we pass this as `ViewportData`, when that's not really what it is?\n        viewportIndex,\n        children,\n        availablePlugins,\n        pluginName,\n        defaultPluginName\n      );\n\n      return (\n        <ViewportPane\n          onDrop={setViewportData}\n          viewportIndex={viewportIndex} // Needed by `setViewportData`\n          className={classNames('viewport-container', {\n            active: activeViewportIndex === viewportIndex,\n          })}\n          key={viewportIndex}\n        >\n          {ViewportComponent}\n        </ViewportPane>\n      );\n    });\n\n  const ViewportPanes = React.useMemo(getViewportPanes, [\n    layout,\n    viewportData,\n    studies,\n    children,\n    availablePlugins,\n    defaultPluginName,\n    setViewportData,\n    activeViewportIndex,\n  ]);\n\n  return (\n    <div\n      data-cy=\"viewprt-grid\"\n      style={{\n        display: 'grid',\n        gridTemplateRows: `repeat(${numRows}, ${rowSize}%)`,\n        gridTemplateColumns: `repeat(${numColumns}, ${colSize}%)`,\n        height: '100%',\n        width: '100%',\n      }}\n    >\n      {ViewportPanes}\n    </div>\n  );\n};\n\nViewportGrid.propTypes = {\n  viewportData: PropTypes.array.isRequired,\n  supportsDrop: PropTypes.bool.isRequired,\n  activeViewportIndex: PropTypes.number.isRequired,\n  layout: PropTypes.object.isRequired,\n  availablePlugins: PropTypes.object.isRequired,\n  setViewportData: PropTypes.func.isRequired,\n  studies: PropTypes.array,\n  children: PropTypes.node,\n  defaultPlugin: PropTypes.string,\n  numRows: PropTypes.number.isRequired,\n  numColumns: PropTypes.number.isRequired,\n};\n\nViewportGrid.defaultProps = {\n  viewportData: [],\n  numRows: 1,\n  numColumns: 1,\n  layout: {\n    viewports: [{}],\n  },\n  activeViewportIndex: 0,\n  supportsDrop: true,\n  availablePlugins: {\n    DefaultViewport,\n  },\n  defaultPlugin: 'defaultViewportPlugin',\n};\n\n/**\n *\n *\n * @param {*} plugin\n * @param {*} viewportData\n * @param {*} viewportIndex\n * @param {*} children\n * @returns\n */\nfunction _getViewportComponent(\n  viewportData,\n  viewportIndex,\n  children,\n  availablePlugins,\n  pluginName,\n  defaultPluginName\n) {\n  if (viewportData.displaySet) {\n    pluginName = pluginName || defaultPluginName;\n    const ViewportComponent = availablePlugins[pluginName];\n\n    if (!ViewportComponent) {\n      throw new Error(\n        `No Viewport Component available for name ${pluginName}.\n         Available plugins: ${JSON.stringify(availablePlugins)}`\n      );\n    }\n\n    return (\n      <ViewportComponent\n        viewportData={viewportData}\n        viewportIndex={viewportIndex}\n        children={[children]}\n      />\n    );\n  }\n\n  return <EmptyViewport />;\n}\n\nexport default ViewportGrid;\n","/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DefaultViewport(props) {\n  return <div>{JSON.stringify(props)}</div>;\n}\n","import ViewportGrid from './ViewportGrid.js';\nimport { MODULE_TYPES } from '@ohif/core';\nimport { connect } from 'react-redux';\nimport { extensionManager } from './../../App.js';\nimport memoize from 'lodash/memoize';\n\nconst getAvailableViewportModules = memoize(viewportModules => {\n  const availableViewportModules = {};\n  viewportModules.forEach(moduleDefinition => {\n    availableViewportModules[moduleDefinition.extensionId] =\n      moduleDefinition.module;\n  });\n  return availableViewportModules;\n});\n\nconst mapStateToProps = state => {\n  const viewportModules = extensionManager.modules[MODULE_TYPES.VIEWPORT];\n  const availableViewportModules = getAvailableViewportModules(viewportModules);\n\n  // TODO: Use something like state.plugins.defaultPlugin[MODULE_TYPES.VIEWPORT]\n  let defaultPlugin;\n  if (viewportModules.length) {\n    defaultPlugin = viewportModules[0].extensionId;\n  }\n\n  const { numRows, numColumns, layout, activeViewportIndex } = state.viewports;\n\n  return {\n    numRows,\n    numColumns,\n    layout,\n    activeViewportIndex,\n    // TODO: rename `availableViewportModules`\n    availablePlugins: availableViewportModules,\n    // TODO: rename `defaultViewportModule`\n    defaultPlugin,\n  };\n};\n\nconst ConnectedViewportGrid = connect(\n  mapStateToProps,\n  null\n)(ViewportGrid);\n\nexport default ConnectedViewportGrid;\n","import './ViewerMain.css';\n\nimport { Component } from 'react';\nimport { ConnectedViewportGrid } from './../components/ViewportGrid/index.js';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport memoize from 'lodash/memoize';\nimport _values from 'lodash/values';\n\nvar values = memoize(_values);\n\nclass ViewerMain extends Component {\n  componentDidMount() {\n    console.log('Viewer Main');\n  }\n  static propTypes = {\n    activeViewportIndex: PropTypes.number.isRequired,\n    studies: PropTypes.array,\n    viewportSpecificData: PropTypes.object.isRequired,\n    layout: PropTypes.object.isRequired,\n    setViewportSpecificData: PropTypes.func.isRequired,\n    clearViewportSpecificData: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displaySets: [],\n    };\n  }\n\n  getDisplaySets(studies) {\n    const displaySets = [];\n    studies.forEach(study => {\n      study.displaySets.forEach(dSet => {\n        if (!dSet.plugin) {\n          dSet.plugin = 'cornerstone';\n        }\n        displaySets.push(dSet);\n      });\n    });\n\n    return displaySets;\n  }\n\n  findDisplaySet(studies, StudyInstanceUID, displaySetInstanceUID) {\n    const study = studies.find(study => {\n      return study.StudyInstanceUID === StudyInstanceUID;\n    });\n\n    if (!study) {\n      return;\n    }\n\n    return study.displaySets.find(displaySet => {\n      return displaySet.displaySetInstanceUID === displaySetInstanceUID;\n    });\n  }\n\n  componentDidMount() {\n    // Add beforeUnload event handler to check for unsaved changes\n    //window.addEventListener('beforeunload', unloadHandlers.beforeUnload);\n\n    // Get all the display sets for the viewer studies\n    if (this.props.studies) {\n      const displaySets = this.getDisplaySets(this.props.studies);\n      this.setState({ displaySets }, this.fillEmptyViewportPanes);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const prevViewportAmount = prevProps.layout.viewports.length;\n    const viewportAmount = this.props.layout.viewports.length;\n    const isVtk = this.props.layout.viewports.some(vp => !!vp.vtk);\n\n    if (\n      this.props.studies !== prevProps.studies ||\n      (viewportAmount !== prevViewportAmount && !isVtk)\n    ) {\n      const displaySets = this.getDisplaySets(this.props.studies);\n      this.setState({ displaySets }, this.fillEmptyViewportPanes);\n    }\n  }\n\n  fillEmptyViewportPanes = () => {\n    // TODO: Here is the entry point for filling viewports on load.\n    const dirtyViewportPanes = [];\n    const { layout, viewportSpecificData } = this.props;\n    const { displaySets } = this.state;\n\n    if (!displaySets || !displaySets.length) {\n      return;\n    }\n\n    for (let i = 0; i < layout.viewports.length; i++) {\n      const viewportPane = viewportSpecificData[i];\n      const isNonEmptyViewport =\n        viewportPane &&\n        viewportPane.StudyInstanceUID &&\n        viewportPane.displaySetInstanceUID;\n\n      if (isNonEmptyViewport) {\n        dirtyViewportPanes.push({\n          StudyInstanceUID: viewportPane.StudyInstanceUID,\n          displaySetInstanceUID: viewportPane.displaySetInstanceUID,\n        });\n\n        continue;\n      }\n\n      const foundDisplaySet =\n        displaySets.find(\n          ds =>\n            !dirtyViewportPanes.some(\n              v => v.displaySetInstanceUID === ds.displaySetInstanceUID\n            )\n        ) || displaySets[displaySets.length - 1];\n\n      dirtyViewportPanes.push(foundDisplaySet);\n    }\n\n    dirtyViewportPanes.forEach((vp, i) => {\n      if (vp && vp.StudyInstanceUID) {\n        this.setViewportData({\n          viewportIndex: i,\n          StudyInstanceUID: vp.StudyInstanceUID,\n          displaySetInstanceUID: vp.displaySetInstanceUID,\n        });\n      }\n    });\n  };\n\n  setViewportData = ({\n    viewportIndex,\n    StudyInstanceUID,\n    displaySetInstanceUID,\n  }) => {\n    let displaySet = this.findDisplaySet(\n      this.props.studies,\n      StudyInstanceUID,\n      displaySetInstanceUID\n    );\n\n    if (displaySet.isDerived) {\n      const { Modality } = displaySet;\n      displaySet = displaySet.getSourceDisplaySet(this.props.studies);\n\n      if (!displaySet) {\n        throw new Error(\n          `Referenced series for ${Modality} dataset not present.`\n        );\n      }\n    }\n\n    this.props.setViewportSpecificData(viewportIndex, displaySet);\n  };\n\n  render() {\n    const { viewportSpecificData } = this.props;\n    const viewportData = values(viewportSpecificData);\n\n    return (\n      <div className=\"ViewerMain\">\n        {this.state.displaySets.length && (\n          <ConnectedViewportGrid\n            isStudyLoaded={this.props.isStudyLoaded}\n            studies={this.props.studies}\n            viewportData={viewportData}\n            setViewportData={this.setViewportData}\n          >\n            {/* Children to add to each viewport that support children */}\n          </ConnectedViewportGrid>\n        )}\n      </div>\n    );\n  }\n\n  componentWillUnmount() {\n    // Clear the entire viewport specific data\n    const { viewportSpecificData } = this.props;\n    Object.keys(viewportSpecificData).forEach(viewportIndex => {\n      this.props.clearViewportSpecificData(viewportIndex);\n    });\n\n    // TODO: These don't have to be viewer specific?\n    // Could qualify for other routes?\n    // hotkeys.destroy();\n\n    // Remove beforeUnload event handler...\n    //window.removeEventListener('beforeunload', unloadHandlers.beforeUnload);\n    // Destroy the synchronizer used to update reference lines\n    //OHIF.viewer.updateImageSynchronizer.destroy();\n    // TODO: Instruct all plugins to clean up themselves\n    //\n    // Clear references to all stacks in the StackManager\n    //StackManager.clearStacks();\n    // @TypeSafeStudies\n    // Clears OHIF.viewer.Studies collection\n    //OHIF.viewer.Studies.removeAll();\n    // @TypeSafeStudies\n    // Clears OHIF.viewer.StudyMetadataList collection\n    //OHIF.viewer.StudyMetadataList.removeAll();\n  }\n}\n\nexport default ViewerMain;\n","import OHIF from '@ohif/core';\nimport ViewerMain from './ViewerMain';\nimport { connect } from 'react-redux';\n\nconst {\n  setViewportSpecificData,\n  clearViewportSpecificData,\n} = OHIF.redux.actions;\n\nconst mapStateToProps = state => {\n  const { activeViewportIndex, layout, viewportSpecificData } = state.viewports;\n\n  return {\n    activeViewportIndex,\n    layout,\n    viewportSpecificData,\n    viewports: state.viewports,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setViewportSpecificData: (viewportIndex, data) => {\n      dispatch(setViewportSpecificData(viewportIndex, data));\n    },\n    clearViewportSpecificData: () => {\n      dispatch(clearViewportSpecificData());\n    },\n  };\n};\n\nconst ConnectedViewerMain = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ViewerMain);\n\nexport default ConnectedViewerMain;\n","import './SidePanel.css';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst SidePanel = ({ from, isOpen, children, width }) => {\n  const fromSideClass = from === 'right' ? 'from-right' : 'from-left';\n\n  const styles = width\n    ? {\n        maxWidth: width,\n        marginRight: isOpen ? '0' : Number.parseInt(width) * -1,\n      }\n    : {};\n\n  return (\n    <section\n      style={styles}\n      className={classNames('sidepanel', fromSideClass, {\n        'is-open': isOpen,\n      })}\n    >\n      {children}\n    </section>\n  );\n};\n\nSidePanel.propTypes = {\n  from: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  children: PropTypes.node,\n  width: PropTypes.string,\n};\n\nexport default SidePanel;\n","import React, { useState } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { ErrorBoundary, Icon } from '@ohif/ui';\nimport { servicesManager } from './../../App';\n\nimport './ErrorBoundaryDialog.css';\n\nconst { UIModalService } = servicesManager.services;\n\nconst ErrorBoundaryDialog = ({ context, children }) => {\n  const handleOnError = (error, componentStack) => {\n    const ErrorDialog = () => {\n      const [open, setOpen] = useState(false);\n\n      return (\n        <div className=\"ErrorFallback\" role=\"alert\">\n          <div className=\"ErrorBoundaryDialog\">\n            <h3 className=\"ErrorBoundaryDialogTitle\">\n              {context}: <span>{error.message}</span>\n            </h3>\n          </div>\n          <button\n            className=\"btn btn-primary btn-sm ErrorBoundaryDialogButton\"\n            onClick={() => setOpen(s => !s)}\n          >\n            <Icon\n              name=\"chevron-down\"\n              className={classnames('ErrorBoundaryDialogIcon', {\n                opened: open,\n              })}\n            />\n            Stack Trace\n          </button>\n\n          {open && <pre>{componentStack}</pre>}\n        </div>\n      );\n    };\n\n    UIModalService.show({\n      content: ErrorDialog,\n      title: `Something went wrong in ${context}`,\n    });\n  };\n\n  const fallbackComponent = () => (\n    <div className=\"ErrorFallback\" role=\"alert\">\n      <p>\n        Error rendering {context}. <br /> Check the browser console for more\n        details.\n      </p>\n    </div>\n  );\n\n  return (\n    <ErrorBoundary\n      fallbackComponent={fallbackComponent}\n      context={context}\n      onError={handleOnError}\n    >\n      {children}\n    </ErrorBoundary>\n  );\n};\n\nErrorBoundaryDialog.propTypes = {\n  context: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default ErrorBoundaryDialog;\n","import ErrorBoundaryDialog from './ErrorBoundaryDialog';\n\nexport default ErrorBoundaryDialog;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport OHIF, { MODULE_TYPES, DICOMSR } from '@ohif/core';\nimport { withDialog } from '@ohif/ui';\nimport moment from 'moment';\nimport ConnectedHeader from './ConnectedHeader.js';\nimport ToolbarRow from './ToolbarRow.js';\nimport ConnectedStudyBrowser from './ConnectedStudyBrowser.js';\nimport ConnectedViewerMain from './ConnectedViewerMain.js';\nimport SidePanel from './../components/SidePanel.js';\nimport ErrorBoundaryDialog from './../components/ErrorBoundaryDialog';\nimport { extensionManager } from './../App.js';\n\n// Contexts\nimport WhiteLabelingContext from '../context/WhiteLabelingContext.js';\nimport UserManagerContext from '../context/UserManagerContext';\nimport AppContext from '../context/AppContext';\n\nimport './Viewer.css';\nimport { finished } from 'stream';\n\nclass Viewer extends Component {\n  static propTypes = {\n    studies: PropTypes.arrayOf(\n      PropTypes.shape({\n        StudyInstanceUID: PropTypes.string.isRequired,\n        StudyDate: PropTypes.string,\n        PatientID: PropTypes.string,\n        displaySets: PropTypes.arrayOf(\n          PropTypes.shape({\n            displaySetInstanceUID: PropTypes.string.isRequired,\n            SeriesDescription: PropTypes.string,\n            SeriesNumber: PropTypes.number,\n            InstanceNumber: PropTypes.number,\n            numImageFrames: PropTypes.number,\n            Modality: PropTypes.string.isRequired,\n            images: PropTypes.arrayOf(\n              PropTypes.shape({\n                getImageId: PropTypes.func.isRequired,\n              })\n            ),\n          })\n        ),\n      })\n    ),\n    studyInstanceUIDs: PropTypes.array,\n    activeServer: PropTypes.shape({\n      type: PropTypes.string,\n      wadoRoot: PropTypes.string,\n    }),\n    onTimepointsUpdated: PropTypes.func,\n    onMeasurementsUpdated: PropTypes.func,\n    // window.store.getState().viewports.viewportSpecificData\n    viewports: PropTypes.object.isRequired,\n    // window.store.getState().viewports.activeViewportIndex\n    activeViewportIndex: PropTypes.number.isRequired,\n    isStudyLoaded: PropTypes.bool,\n    dialog: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { activeServer } = this.props;\n    const server = Object.assign({}, activeServer);\n\n    OHIF.measurements.MeasurementApi.setConfiguration({\n      dataExchange: {\n        retrieve: DICOMSR.retrieveMeasurements,\n        store: DICOMSR.storeMeasurements,\n      },\n      server,\n    });\n\n    OHIF.measurements.TimepointApi.setConfiguration({\n      dataExchange: {\n        retrieve: this.retrieveTimepoints,\n        store: this.storeTimepoints,\n        remove: this.removeTimepoint,\n        update: this.updateTimepoint,\n        disassociate: this.disassociateStudy,\n      },\n    });\n\n    this._getActiveViewport = this._getActiveViewport.bind(this);\n  }\n\n  state = {\n    isLeftSidePanelOpen: true,\n    isRightSidePanelOpen: false,\n    selectedRightSidePanel: '',\n    selectedLeftSidePanel: 'studies', // TODO: Don't hardcode this\n    thumbnails: [],\n  };\n\n  componentWillUnmount() {\n    if (this.props.dialog) {\n      this.props.dialog.dismissAll();\n    }\n  }\n\n  retrieveTimepoints = filter => {\n    OHIF.log.info('retrieveTimepoints');\n\n    // Get the earliest and latest study date\n    let earliestDate = new Date().toISOString();\n    let latestDate = new Date().toISOString();\n    if (this.props.studies) {\n      latestDate = new Date('1000-01-01').toISOString();\n      this.props.studies.forEach(study => {\n        const StudyDate = moment(study.StudyDate, 'YYYYMMDD').toISOString();\n        if (StudyDate < earliestDate) {\n          earliestDate = StudyDate;\n        }\n        if (StudyDate > latestDate) {\n          latestDate = StudyDate;\n        }\n      });\n    }\n\n    // Return a generic timepoint\n    return Promise.resolve([\n      {\n        timepointType: 'baseline',\n        timepointId: 'TimepointId',\n        studyInstanceUIDs: this.props.studyInstanceUIDs,\n        PatientID: filter.PatientID,\n        earliestDate,\n        latestDate,\n        isLocked: false,\n      },\n    ]);\n  };\n\n  storeTimepoints = timepointData => {\n    OHIF.log.info('storeTimepoints');\n    return Promise.resolve();\n  };\n\n  updateTimepoint = (timepointData, query) => {\n    OHIF.log.info('updateTimepoint');\n    return Promise.resolve();\n  };\n\n  removeTimepoint = timepointId => {\n    OHIF.log.info('removeTimepoint');\n    return Promise.resolve();\n  };\n\n  disassociateStudy = (timepointIds, StudyInstanceUID) => {\n    OHIF.log.info('disassociateStudy');\n    return Promise.resolve();\n  };\n\n  onTimepointsUpdated = timepoints => {\n    if (this.props.onTimepointsUpdated) {\n      this.props.onTimepointsUpdated(timepoints);\n    }\n  };\n\n  onMeasurementsUpdated = measurements => {\n    if (this.props.onMeasurementsUpdated) {\n      this.props.onMeasurementsUpdated(measurements);\n    }\n  };\n\n  componentDidMount() {\n    const { studies, isStudyLoaded } = this.props;\n    const { TimepointApi, MeasurementApi } = OHIF.measurements;\n    const currentTimepointId = 'TimepointId';\n\n    const timepointApi = new TimepointApi(currentTimepointId, {\n      onTimepointsUpdated: this.onTimepointsUpdated,\n    });\n\n    const measurementApi = new MeasurementApi(timepointApi, {\n      onMeasurementsUpdated: this.onMeasurementsUpdated,\n    });\n\n    this.currentTimepointId = currentTimepointId;\n    this.timepointApi = timepointApi;\n    this.measurementApi = measurementApi;\n\n    if (studies) {\n      const PatientID = studies[0] && studies[0].PatientID;\n\n      timepointApi.retrieveTimepoints({ PatientID });\n      if (isStudyLoaded) {\n        this.measurementApi.retrieveMeasurements(PatientID, [\n          currentTimepointId,\n        ]);\n      }\n\n      this.setState({\n        thumbnails: _mapStudiesToThumbnails(studies),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { studies, isStudyLoaded } = this.props;\n\n    if (studies !== prevProps.studies) {\n      this.setState({\n        thumbnails: _mapStudiesToThumbnails(studies),\n      });\n    }\n    if (isStudyLoaded && isStudyLoaded !== prevProps.isStudyLoaded) {\n      const PatientID = studies[0] && studies[0].PatientID;\n      const { currentTimepointId } = this;\n\n      this.timepointApi.retrieveTimepoints({ PatientID });\n      this.measurementApi.retrieveMeasurements(PatientID, [currentTimepointId]);\n    }\n  }\n\n  _getActiveViewport() {\n    return this.props.viewports[this.props.activeViewportIndex];\n  }\n\n  render() {\n    let VisiblePanelLeft, VisiblePanelRight;\n    const panelExtensions = extensionManager.modules[MODULE_TYPES.PANEL];\n\n    panelExtensions.forEach(panelExt => {\n      panelExt.module.components.forEach(comp => {\n        if (comp.id === this.state.selectedRightSidePanel) {\n          VisiblePanelRight = comp.component;\n        } else if (comp.id === this.state.selectedLeftSidePanel) {\n          VisiblePanelLeft = comp.component;\n        }\n      });\n    });\n\n    return (\n      <>\n        {/* HEADER */}\n        <WhiteLabelingContext.Consumer>\n          {whiteLabeling => (\n            <UserManagerContext.Consumer>\n              {userManager => (\n                <AppContext.Consumer>\n                  {appContext => (\n                    <ConnectedHeader\n                      linkText={\n                        appContext.appConfig.showStudyList\n                          ? 'Study List'\n                          : undefined\n                      }\n                      linkPath={\n                        appContext.appConfig.showStudyList ? '/' : undefined\n                      }\n                      userManager={userManager}\n                    >\n                      {whiteLabeling &&\n                        whiteLabeling.createLogoComponentFn &&\n                        whiteLabeling.createLogoComponentFn(React)}\n                    </ConnectedHeader>\n                  )}\n                </AppContext.Consumer>\n              )}\n            </UserManagerContext.Consumer>\n          )}\n        </WhiteLabelingContext.Consumer>\n\n        {/* TOOLBAR */}\n        <ErrorBoundaryDialog context=\"ToolbarRow\">\n          <ToolbarRow\n            activeViewport={\n              this.props.viewports[this.props.activeViewportIndex]\n            }\n            isLeftSidePanelOpen={this.state.isLeftSidePanelOpen}\n            isRightSidePanelOpen={this.state.isRightSidePanelOpen}\n            selectedLeftSidePanel={\n              this.state.isLeftSidePanelOpen\n                ? this.state.selectedLeftSidePanel\n                : ''\n            }\n            selectedRightSidePanel={\n              this.state.isRightSidePanelOpen\n                ? this.state.selectedRightSidePanel\n                : ''\n            }\n            handleSidePanelChange={(side, selectedPanel) => {\n              const sideClicked = side && side[0].toUpperCase() + side.slice(1);\n              const openKey = `is${sideClicked}SidePanelOpen`;\n              const selectedKey = `selected${sideClicked}SidePanel`;\n              const updatedState = Object.assign({}, this.state);\n\n              const isOpen = updatedState[openKey];\n              const prevSelectedPanel = updatedState[selectedKey];\n              // RoundedButtonGroup returns `null` if selected button is clicked\n              const isSameSelectedPanel =\n                prevSelectedPanel === selectedPanel || selectedPanel === null;\n\n              updatedState[selectedKey] = selectedPanel || prevSelectedPanel;\n\n              const isClosedOrShouldClose = !isOpen || isSameSelectedPanel;\n              if (isClosedOrShouldClose) {\n                updatedState[openKey] = !updatedState[openKey];\n              }\n\n              this.setState(updatedState);\n            }}\n            studies={this.props.studies}\n          />\n        </ErrorBoundaryDialog>\n\n        {/*<ConnectedStudyLoadingMonitor studies={this.props.studies} />*/}\n        {/*<StudyPrefetcher studies={this.props.studies} />*/}\n\n        {/* VIEWPORTS + SIDEPANELS */}\n        <div className=\"FlexboxLayout\">\n          {/* LEFT */}\n          <ErrorBoundaryDialog context=\"LeftSidePanel\">\n            <SidePanel from=\"left\" isOpen={this.state.isLeftSidePanelOpen}>\n              {VisiblePanelLeft ? (\n                <VisiblePanelLeft\n                  viewports={this.props.viewports}\n                  studies={this.props.studies}\n                  activeIndex={this.props.activeViewportIndex}\n                />\n              ) : (\n                <ConnectedStudyBrowser\n                  studies={this.state.thumbnails}\n                  studyMetadata={this.props.studies}\n                />\n              )}\n            </SidePanel>\n          </ErrorBoundaryDialog>\n\n          {/* MAIN */}\n          <div className={classNames('main-content')}>\n            <ErrorBoundaryDialog context=\"ViewerMain\">\n              <ConnectedViewerMain\n                studies={this.props.studies}\n                isStudyLoaded={this.props.isStudyLoaded}\n              />\n            </ErrorBoundaryDialog>\n          </div>\n\n          {/* RIGHT */}\n          <ErrorBoundaryDialog context=\"RightSidePanel\">\n            <SidePanel from=\"right\" isOpen={this.state.isRightSidePanelOpen}>\n              {VisiblePanelRight && (\n                <VisiblePanelRight\n                  isOpen={this.state.isRightSidePanelOpen}\n                  viewports={this.props.viewports}\n                  studies={this.props.studies}\n                  activeIndex={this.props.activeViewportIndex}\n                  activeViewport={\n                    this.props.viewports[this.props.activeViewportIndex]\n                  }\n                  getActiveViewport={this._getActiveViewport}\n                />\n              )}\n            </SidePanel>\n          </ErrorBoundaryDialog>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withDialog(Viewer);\n\n/**\n * What types are these? Why do we have \"mapping\" dropped in here instead of in\n * a mapping layer?\n *\n * TODO[react]:\n * - Add showStackLoadingProgressBar option\n *\n * @param {Study[]} studies\n * @param {DisplaySet[]} studies[].displaySets\n */\nconst _mapStudiesToThumbnails = function(studies) {\n  return studies.map(study => {\n    const { StudyInstanceUID } = study;\n\n    const thumbnails = study.displaySets.map(displaySet => {\n      const {\n        displaySetInstanceUID,\n        SeriesDescription,\n        InstanceNumber,\n        numImageFrames,\n        SeriesNumber,\n      } = displaySet;\n\n      let imageId;\n      let altImageText;\n\n      if (displaySet.Modality && displaySet.Modality === 'SEG') {\n        // TODO: We want to replace this with a thumbnail showing\n        // the segmentation map on the image, but this is easier\n        // and better than what we have right now.\n        altImageText = 'SEG';\n      } else if (displaySet.images && displaySet.images.length) {\n        const imageIndex = Math.floor(displaySet.images.length / 2);\n\n        imageId = displaySet.images[imageIndex].getImageId();\n      } else {\n        altImageText = displaySet.Modality ? displaySet.Modality : 'UN';\n      }\n\n      return {\n        imageId,\n        altImageText,\n        displaySetInstanceUID,\n        SeriesDescription,\n        InstanceNumber,\n        numImageFrames,\n        SeriesNumber,\n      };\n    });\n\n    return {\n      StudyInstanceUID,\n      thumbnails,\n    };\n  });\n};\n","import { connect } from 'react-redux';\nimport Viewer from './Viewer.js';\nimport OHIF from '@ohif/core';\n\nconst { setTimepoints, setMeasurements } = OHIF.redux.actions;\n\nconst getActiveServer = servers => {\n  const isActive = a => a.active === true;\n  return servers.servers.find(isActive);\n};\n\nconst mapStateToProps = state => {\n  const { viewports, servers } = state;\n  return {\n    viewports: viewports.viewportSpecificData,\n    activeViewportIndex: viewports.activeViewportIndex,\n    activeServer: getActiveServer(servers),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTimepointsUpdated: timepoints => {\n      dispatch(setTimepoints(timepoints));\n    },\n    onMeasurementsUpdated: measurements => {\n      dispatch(setMeasurements(measurements));\n    },\n  };\n};\n\nconst ConnectedViewer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Viewer);\n\nexport default ConnectedViewer;\n","export default class FileLoader {\n  fileType;\n  loadFile(file, imageId) { }\n  getDataset(image, imageId) { }\n  getStudies(dataset, imageId) { }\n}\n","import cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport FileLoader from './fileLoader';\n\nconst PDFFileLoader = new (class extends FileLoader {\n  fileType = 'application/pdf';\n  loadFile(file, imageId) {\n    return cornerstoneWADOImageLoader.wadouri.loadFileRequest(imageId);\n  }\n\n  getDataset(image, imageId) {\n    const dataset = {};\n    dataset.imageId = image.imageId || imageId;\n    return dataset;\n  }\n\n  getStudies(dataset, imageId) {\n    return this.getDefaultStudy(imageId);\n  }\n\n  getDefaultStudy(imageId) {\n    const study = {\n      StudyInstanceUID: '',\n      StudyDate: '',\n      StudyTime: '',\n      AccessionNumber: '',\n      ReferringPhysicianName: '',\n      PatientName: '',\n      PatientID: '',\n      PatientBirthdate: '',\n      PatientSex: '',\n      StudyId: '',\n      StudyDescription: '',\n      series: [\n        {\n          SeriesInstanceUID: '',\n          SeriesDescription: '',\n          SeriesNumber: '',\n          instances: [\n            {\n              metadata: {\n                SOPInstanceUID: '',\n                SOPClassUID: '1.2.840.10008.5.1.4.1.1.104.1',\n                Rows: '',\n                Columns: '',\n                NumberOfFrames: 0,\n                InstanceNumber: 1,\n              },\n              getImageId: () => imageId,\n              isLocalFile: true,\n            },\n          ],\n        },\n      ],\n    };\n\n    return study;\n  }\n})();\n\nexport default PDFFileLoader;\n","import dcmjs from 'dcmjs';\nimport cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport FileLoader from './fileLoader';\nimport OHIF from '@ohif/core';\n\nconst metadataProvider = OHIF.cornerstone.metadataProvider;\n\nconst DICOMFileLoader = new (class extends FileLoader {\n  fileType = 'application/dicom';\n  loadFile(file, imageId) {\n    return cornerstoneWADOImageLoader.wadouri.loadFileRequest(imageId);\n  }\n\n  getDataset(image, imageId) {\n    let dataset = {};\n    try {\n      const dicomData = dcmjs.data.DicomMessage.readFile(image);\n\n      dataset = dcmjs.data.DicomMetaDictionary.naturalizeDataset(\n        dicomData.dict\n      );\n\n      metadataProvider.addInstance(dataset);\n\n      dataset._meta = dcmjs.data.DicomMetaDictionary.namifyDataset(\n        dicomData.meta\n      );\n    } catch (e) {\n      console.error('Error reading dicom file', e);\n    }\n    // Set imageId on dataset to be consumed later on\n    dataset.imageId = imageId;\n\n    return dataset;\n  }\n\n  getStudies(dataset, imageId) {\n    return this.getStudyFromDataset(dataset);\n  }\n\n  getStudyFromDataset(dataset = {}) {\n    const {\n      StudyInstanceUID,\n      StudyDate,\n      StudyTime,\n      AccessionNumber,\n      ReferringPhysicianName,\n      PatientName,\n      PatientID,\n      PatientBirthDate,\n      PatientSex,\n      StudyID,\n      StudyDescription,\n      SeriesInstanceUID,\n      SeriesDescription,\n      SeriesNumber,\n      imageId,\n    } = dataset;\n\n    const instance = {\n      metadata: dataset,\n      url: imageId,\n    };\n\n    const series = {\n      SeriesInstanceUID: SeriesInstanceUID,\n      SeriesDescription: SeriesDescription,\n      SeriesNumber: SeriesNumber,\n      instances: [instance],\n    };\n\n    const study = {\n      StudyInstanceUID,\n      StudyDate,\n      StudyTime,\n      AccessionNumber,\n      ReferringPhysicianName,\n      PatientName,\n      PatientID,\n      PatientBirthDate,\n      PatientSex,\n      StudyID,\n      StudyDescription,\n      /*\n      TODO: in case necessary to uncomment this block, double check every property\n      numberOfStudyRelatedSeries: NumberOfStudyRelatedSeries || DICOMWeb.getString(dataset['00201206']),\n      numberOfStudyRelatedInstances: NumberOfStudyRelatedInstances || DICOMWeb.getString(dataset['00201208']),\n      Modality: Modality || DICOMWeb.getString(dataset['00080060']),\n      ModalitiesInStudy: ModalitiesInStudy || DICOMWeb.getString(dataset['00080061']),\n      modalities:\n      */\n      series: [series],\n    };\n\n    return study;\n  }\n})();\n\nexport default DICOMFileLoader;\n","import cornerstoneWADOImageLoader from 'cornerstone-wado-image-loader';\nimport FileLoader from './fileLoader';\nimport PDFFileLoader from './pdfFileLoader';\nimport DICOMFileLoader from './dicomFileLoader';\n\nclass FileLoaderService extends FileLoader {\n  fileType;\n  loader;\n  constructor(file) {\n    super();\n    const fileType = file && file.type;\n    this.loader = this.getLoader(fileType);\n    this.fileType = this.loader.fileType;\n  }\n\n  static groupSeries(studies) {\n    const groupBy = (list, groupByKey, listKey) => {\n      let nonKeyCounter = 1;\n\n      return list.reduce((acc, obj) => {\n        let key = obj[groupByKey];\n        const list = obj[listKey];\n\n        // in case key not found, group it using counter\n        key = !!key ? key : '' + nonKeyCounter++;\n\n        if (!acc[key]) {\n          acc[key] = { ...obj };\n          acc[key][listKey] = [];\n        }\n\n        acc[key][listKey].push(...list);\n\n        return acc;\n      }, {});\n    };\n\n    const studiesGrouped = Object.values(\n      groupBy(studies, 'StudyInstanceUID', 'series')\n    );\n\n    const result = studiesGrouped.map(studyGroup => {\n      const seriesGrouped = groupBy(\n        studyGroup.series,\n        'SeriesInstanceUID',\n        'instances'\n      );\n      studyGroup.series = Object.values(seriesGrouped);\n\n      return studyGroup;\n    });\n\n    return result;\n  }\n\n  addFile(file) {\n    return cornerstoneWADOImageLoader.wadouri.fileManager.add(file);\n  }\n\n  loadFile(file, imageId) {\n    return this.loader.loadFile(file, imageId);\n  }\n\n  getDataset(image, imageId) {\n    return this.loader.getDataset(image, imageId);\n  }\n\n  getStudies(dataset, imageId) {\n    return this.loader.getStudies(dataset, imageId);\n  }\n\n  getLoader(fileType) {\n    if (fileType === 'application/pdf') {\n      return PDFFileLoader;\n    } else {\n      // Default to dicom loader\n      return DICOMFileLoader;\n    }\n  }\n}\n\nexport default FileLoaderService;\n","import FileLoaderService from './localFileLoaders/fileLoaderService';\n\nconst processFile = async file => {\n  try {\n    const fileLoaderService = new FileLoaderService(file);\n    const imageId = fileLoaderService.addFile(file);\n    const image = await fileLoaderService.loadFile(file, imageId);\n    const dataset = await fileLoaderService.getDataset(image, imageId);\n    const studies = await fileLoaderService.getStudies(dataset, imageId);\n\n    return studies;\n  } catch (error) {\n    console.log(\n      error.name,\n      ':Error when trying to load and process local files:',\n      error.message\n    );\n  }\n};\n\nexport default async function filesToStudies(files) {\n  const processFilesPromises = files.map(processFile);\n  const studies = await Promise.all(processFilesPromises);\n\n  return FileLoaderService.groupSeries(studies.flat());\n}\n"],"sourceRoot":""}