worker_processes auto;
pid /var/run/nginx.pid;
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    include    '/usr/local/openresty/nginx/conf/mime.types';
    default_type application/octet-stream;

    keepalive_timeout 65;
    keepalive_requests 100000;
    tcp_nopush on;
    tcp_nodelay on;

    lua_package_path '/usr/local/openresty/lualib/?.lua;;';
    lua_shared_dict discovery 1m;
    lua_shared_dict jwks 1m;
    lua_shared_dict introspection 10m;

    variables_hash_max_size 2048;
    server_names_hash_bucket_size 128;
    server_tokens off;

    resolver 8.8.8.8 valid=30s ipv6=off;
    resolver_timeout 11s;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    server {
        listen 80 default_server;
        server_name 127.0.0.1 localhost;

        access_log /var/log/nginx/sso.lamis.life.access.log;
        error_log  /var/log/nginx/sso.lamis.life.error.log;

        expires           0;
        add_header        Cache-Control private;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        location / {
            alias /var/www/html/;
            index index.html;
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }

        location /auth {                                                     
            proxy_pass http://keycloak:8080;                                
        }

        location /orthanc/ {
            access_by_lua_block {
                local opts = {
                    public_key = [[-----BEGIN CERTIFICATE-----
MIICnzCCAYcCBgF5ghyvwDANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhwdWxtb3JhZDAeFw0yMTA1MTkwMDUxMjhaFw0zMTA1MTkwMDUzMDhaMBMxETAPBgNVBAMMCHB1bG1vcmFkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAjFIfuXUjhXrIW8G4nOTpgImGiPxP+lb7pHE9a1leyhoWCKJlnNTTP72GMBf9v0PmxuEIj9nBbSn4KgbXPuCEmsl/Z4rr2wBh9WhIE82dHTwuq2/+Y/9eoOu7/bWDqq63NlzdQWrUjJ6e4JcUMgCaDlfHiqaMIJPynqco9v7Pu5PCcrM1VQfsutxwocDFvfoiYBtHPrNUPM9XRWb8SAUb5gMJD4xqnypxKCT6LOvHJcc11UoGfjqQDNGTlV+hfu5pj7+trWMYRiEa604IfbNov0TCs+UAAt2MkoFGJ5E33OofIaeVvR7921amuhYGf8YYpHrPKC0o7dpCvPILtycaCwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBc9pLhs/KYCkkbGz86ZH92mIvdoKklzHZrZ1tk24Lgrh9/8jGGwinDSJZ4ktgXaspK4+rY4FXdLygnP7LA9S+jkKh/wte2+hut71wDKngST7jp4ORHmGINYuDqrYJNaASDpweng3bngnYh+WMVv+VuzYL7vHa+zJNxGJDcAufYwBAJpAr5vkTex8+JKALTYnBVCi8aJaREZPIDP3hQbIf/d1f0vxx562RXnXOGFCR8xkK1IzSj8SQaObkcAjzrpNI/fNYvX62txPFZ1kp56OCboblIhwMQ2H1qdA00obVWgGfz3HjSItwizHjmYL3hHzoxRsoFuhQqKiEz8lS76DDe
-----END CERTIFICATE-----]],
                    token_signing_alg_values_expected = { "RS256" },
                    accept_unsupported_alg = false,
                    accept_none_alg = false
                }

                -- call bearer_jwt_verify for OAuth 2.0 JWT validation
                local res, err = require("resty.openidc").bearer_jwt_verify(opts)

                if err or not res then
                    ngx.status = 403
                    ngx.say(err and err or "no access_token provided")
                    ngx.exit(ngx.HTTP_FORBIDDEN)
                end
            }
            # Simple requests CORS
            if ($request_method ~* "(GET|POST)") {
                add_header "Access-Control-Allow-Origin" *;
            }
            # Preflighted requests CORS
            if ($request_method = OPTIONS ) {
                add_header "Access-Control-Allow-Origin" *;
                add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 200;
            }
        
            proxy_pass http://orthanc:8042/;
        }

        location /fapi/ {
            access_by_lua_block {
                local opts = {
                    public_key = [[-----BEGIN CERTIFICATE-----
MIICnzCCAYcCBgF5ghyvwDANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhwdWxtb3JhZDAeFw0yMTA1MTkwMDUxMjhaFw0zMTA1MTkwMDUzMDhaMBMxETAPBgNVBAMMCHB1bG1vcmFkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAjFIfuXUjhXrIW8G4nOTpgImGiPxP+lb7pHE9a1leyhoWCKJlnNTTP72GMBf9v0PmxuEIj9nBbSn4KgbXPuCEmsl/Z4rr2wBh9WhIE82dHTwuq2/+Y/9eoOu7/bWDqq63NlzdQWrUjJ6e4JcUMgCaDlfHiqaMIJPynqco9v7Pu5PCcrM1VQfsutxwocDFvfoiYBtHPrNUPM9XRWb8SAUb5gMJD4xqnypxKCT6LOvHJcc11UoGfjqQDNGTlV+hfu5pj7+trWMYRiEa604IfbNov0TCs+UAAt2MkoFGJ5E33OofIaeVvR7921amuhYGf8YYpHrPKC0o7dpCvPILtycaCwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBc9pLhs/KYCkkbGz86ZH92mIvdoKklzHZrZ1tk24Lgrh9/8jGGwinDSJZ4ktgXaspK4+rY4FXdLygnP7LA9S+jkKh/wte2+hut71wDKngST7jp4ORHmGINYuDqrYJNaASDpweng3bngnYh+WMVv+VuzYL7vHa+zJNxGJDcAufYwBAJpAr5vkTex8+JKALTYnBVCi8aJaREZPIDP3hQbIf/d1f0vxx562RXnXOGFCR8xkK1IzSj8SQaObkcAjzrpNI/fNYvX62txPFZ1kp56OCboblIhwMQ2H1qdA00obVWgGfz3HjSItwizHjmYL3hHzoxRsoFuhQqKiEz8lS76DDe
-----END CERTIFICATE-----]],
                    token_signing_alg_values_expected = { "RS256" },
                    accept_unsupported_alg = false,
                    accept_none_alg = false
                }

                -- call bearer_jwt_verify for OAuth 2.0 JWT validation
                local res, err = require("resty.openidc").bearer_jwt_verify(opts)

                if err or not res then
                    ngx.status = 403
                    ngx.say(err and err or "no access_token provided")
                    ngx.exit(ngx.HTTP_FORBIDDEN)
                end
            }
            
            proxy_pass http://fastapi:80/;
        }
    }
}
